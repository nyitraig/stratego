{"version":3,"sources":["assets/logo.png","enums/Unit.tsx","enums/Team.tsx","domain/exampleGameState.js","enums/Page.tsx","state/gameState/actions.js","state/gameState/reducer.js","domain/examplePrepareState.js","state/prepareState/reducer.js","state/store.js","state/prepareState/actions.js","state/messages/actions.js","state/gameState/selectors.js","views/home/Home.js","views/lobby/Lobby.js","state/prepareState/selectors.js","views/prepare/Board.js","views/prepare/Prepare.js","views/game/Board.js","views/game/Game.js","views/App.js","index.js"],"names":["module","exports","Unit","Team","Page","exampleGameState","player","RED","boardSize","units","team","BLUE","unit","FLAG","position","x","y","BOMB","SPY","SCOUT","MINER","SERGEANT","CAPTAIN","COLONEL","MARSHAL","gameStateSetRoomId","roomId","type","payload","id","getNewGameState","currentPlayer","winner","isFightInProgress","selectedUnitId","attackedUnitId","synced","board","Array","fill","map","_","i","Math","floor","isAvailable","u","isAttackable","isAlive","graveyardRed","filter","length","ceil","graveyardBlue","initialState","examplePrepareState","availableUnits","amount","availableRows","includes","hand","reduce","a","c","isSelected","isInHand","flat","rootReducer","combineReducers","gameState","state","action","setNewGameState","isCellAvailable","cellId","unitId","cell","find","abs","isUnitAttackable","attackingUnitId","attackedUnit","attackingUnit","attackedUnitCell","handleUnitClick","String","localeCompare","moveUnitOnBoard","moveSelectedUnitOnBoard","checkGameOver","aliveUnits","every","NONE","killUnit","totalUnitsCount","deadUnitsCount","concludeFight","setRoomId","setPlayer","addUnits","maxUnitId","max","maxGraveyardRedId","maxGraveyardBlueId","concat","updateState","newState","enemyUnits","prepareState","unitOnCell","selectedUnit","preloadedState","socket","syncState","broadcast","dispatch","emit","ack","status","console","error","message","leaveRoom","getGameState","Home","onPageChange","useDispatch","useSelector","useState","useEffect","PREPARE_GAME","className","style","width","src","logo","alt","onClick","WAITING_FOR_SECOND_PLAYER","placeholder","onInput","e","target","value","outline","joinRoom","window","location","href","Lobby","IN_GAME","MAIN_PAGE","getPrepareState","Board","onUnitClick","onBoardClick","onHandClick","onReady","height","left","top","key","some","Prepare","prepareStateActivateUnit","boardCellId","prepareStateMoveSelectedUnitOnBoard","handCellId","prepareStateMoveSelectedUnitOnHand","onMenuButtonClick","Game","setTimeout","gameStateHandleUnitClick","gameStateMoveSelectedUnitOnBoard","App","page","setPage","io","on","msg","log","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,kC,4ICA/BC,ECAAC,E,+EDAAD,O,eAAAA,I,aAAAA,I,iBAAAA,I,iBAAAA,I,uBAAAA,I,2BAAAA,I,qBAAAA,I,iBAAAA,I,qBAAAA,I,qBAAAA,I,sBAAAA,I,gBAAAA,I,gBAAAA,I,uBAAAA,M,cCAAC,K,YAAAA,E,UAAAA,E,aAAAA,M,KCGL,ICHKC,EDGCC,EAAmB,CAC5BC,OAAQH,EAAKI,IACbC,UAAW,EACXC,MAAO,CACH,CAAEC,KAAMP,EAAKQ,KAAMC,KAAMV,EAAKW,KAAUC,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKQ,KAAMC,KAAMV,EAAKe,KAAUH,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKQ,KAAMC,KAAMV,EAAKe,KAAUH,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKQ,KAAMC,KAAMV,EAAKgB,IAAUJ,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKQ,KAAMC,KAAMV,EAAKiB,MAAUL,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKQ,KAAMC,KAAMV,EAAKiB,MAAUL,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKQ,KAAMC,KAAMV,EAAKkB,MAAUN,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKQ,KAAMC,KAAMV,EAAKkB,MAAUN,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKQ,KAAMC,KAAMV,EAAKmB,SAAUP,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKQ,KAAMC,KAAMV,EAAKoB,QAAUR,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKQ,KAAMC,KAAMV,EAAKqB,QAAUT,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKQ,KAAMC,KAAMV,EAAKsB,QAAUV,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKI,IAAMK,KAAMV,EAAKW,KAAUC,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKI,IAAMK,KAAMV,EAAKe,KAAUH,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKI,IAAMK,KAAMV,EAAKe,KAAUH,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKI,IAAMK,KAAMV,EAAKgB,IAAUJ,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKI,IAAMK,KAAMV,EAAKiB,MAAUL,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKI,IAAMK,KAAMV,EAAKiB,MAAUL,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKI,IAAMK,KAAMV,EAAKkB,MAAUN,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKI,IAAMK,KAAMV,EAAKkB,MAAUN,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKI,IAAMK,KAAMV,EAAKmB,SAAUP,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKI,IAAMK,KAAMV,EAAKoB,QAAUR,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKI,IAAMK,KAAMV,EAAKqB,QAAUT,SAAU,CAAEC,EAAG,EAAGC,EAAG,IAC7D,CAAEN,KAAMP,EAAKI,IAAMK,KAAMV,EAAKsB,QAAUV,SAAU,CAAEC,EAAG,EAAGC,EAAG,MEDxDS,EAAqB,SAACC,GAAD,MAAa,CAC3CC,KA1BkC,yBA2BlCC,QAAS,CAAEC,GAAIH,KCjBbI,EAAkB,SAACtB,EAAWC,GAChC,MAAO,CACHiB,OAAQ,KACRpB,OAAQ,KACRyB,cAAe,KACfC,OAAQ,KACRxB,UAAWA,EACXyB,mBAAmB,EACnBC,eAAgB,KAChBC,eAAgB,KAChBC,QAAQ,EACRC,MAAOC,MAAM,KAAD,IAAC9B,EAAa,IAAG+B,OAAOC,KAAI,SAACC,EAAGC,GAAJ,MAAW,CAC/Cb,GAAIa,EACJ5B,SAAU,CAAEC,EAAG2B,EAAIlC,EAAWQ,EAAG2B,KAAKC,MAAMF,EAAIlC,IAChDqC,aAAa,MAEjBpC,MAAOA,EAAM+B,KAAI,SAACM,EAAGJ,GAAJ,MAAW,CACxBb,GAAI,IAAOa,EACXhC,KAAMoC,EAAEpC,KACRE,KAAMkC,EAAElC,KACRE,SAAUgC,EAAEhC,SACZiC,cAAc,EACdC,SAAS,MAEbC,aAAcX,MAAM7B,EAAMyC,QAAO,SAAAJ,GAAC,OAAIA,EAAEpC,OAASP,EAAKI,OAAK4C,QAAQZ,OAAOC,KAAI,SAACC,EAAGC,GAAJ,MAAW,CACrFb,GAAI,IAAOa,EACX5B,SAAU,CACNC,EAAG2B,EAAIC,KAAKS,KAAK3C,EAAMyC,QAAO,SAAAJ,GAAC,OAAIA,EAAEpC,OAASP,EAAKI,OAAK4C,OAAS3C,GACjEQ,EAAG2B,KAAKC,MAAMF,EAAIC,KAAKS,KAAK3C,EAAMyC,QAAO,SAAAJ,GAAC,OAAIA,EAAEpC,OAASP,EAAKI,OAAK4C,OAAS3C,SAGpF6C,cAAef,MAAM7B,EAAMyC,QAAO,SAAAJ,GAAC,OAAIA,EAAEpC,OAASP,EAAKQ,QAAMwC,QAAQZ,OAAOC,KAAI,SAACC,EAAGC,GAAJ,MAAW,CACvFb,GAAI,IAAOa,EACX5B,SAAU,CACNC,EAAG2B,EAAIC,KAAKS,KAAK3C,EAAMyC,QAAO,SAAAJ,GAAC,OAAIA,EAAEpC,OAASP,EAAKQ,QAAMwC,OAAS3C,GAClEQ,EAAG2B,KAAKC,MAAMF,EAAIC,KAAKS,KAAK3C,EAAMyC,QAAO,SAAAJ,GAAC,OAAIA,EAAEpC,OAASP,EAAKQ,QAAMwC,OAAS3C,WAMvF8C,EAAexB,EAAgBzB,EAAiBG,UAAWH,EAAiBI,OCpDrE8C,EAAsB,CAC/BjD,OAAQH,EAAKI,IACbC,UAAW,EACXgD,eAAgB,CACZ,CAAE5C,KAAMV,EAAKW,KAAU4C,OAAQ,GAC/B,CAAE7C,KAAMV,EAAKe,KAAUwC,OAAQ,GAC/B,CAAE7C,KAAMV,EAAKgB,IAAUuC,OAAQ,GAC/B,CAAE7C,KAAMV,EAAKiB,MAAUsC,OAAQ,GAC/B,CAAE7C,KAAMV,EAAKkB,MAAUqC,OAAQ,GAC/B,CAAE7C,KAAMV,EAAKmB,SAAUoC,OAAQ,GAC/B,CAAE7C,KAAMV,EAAKoB,QAAUmC,OAAQ,GAC/B,CAAE7C,KAAMV,EAAKqB,QAAUkC,OAAQ,GAC/B,CAAE7C,KAAMV,EAAKsB,QAAUiC,OAAQ,KCNjC3B,EAAkB,SAACxB,EAAQE,EAAWC,GACxC,IAAMiD,EAAgBpD,IAAWH,EAAKI,IAAM,CAACC,EAAY,EAAGA,EAAY,GAAK,CAAC,EAAG,GACjF,MAAO,CACHF,OAAQA,EACRE,UAAWA,EACX6B,MAAOC,MAAM,KAAD,IAAC9B,EAAa,IAAG+B,OAAOC,KAAI,SAACC,EAAGC,GAAJ,MAAW,CAC/Cb,GAAIa,EACJ5B,SAAU,CAAEC,EAAG2B,EAAIlC,EAAWQ,EAAG2B,KAAKC,MAAMF,EAAIlC,IAChDqC,YAAaa,EAAcC,SAAShB,KAAKC,MAAMF,EAAIlC,QAEvDoD,KAAMtB,MAAM7B,EAAMoD,QAAO,SAACC,EAAGC,GAAJ,OAAUA,EAAEN,OAASK,IAAG,IAAIvB,OAAOC,KAAI,SAACC,EAAGC,GAAJ,MAAW,CACvEb,GAAI,IAAOa,EACX5B,SAAU,CAAEC,EAAG2B,EAAIlC,EAAWQ,EAAG2B,KAAKC,MAAMF,EAAIlC,QAEpDC,MAAOA,EAAM+B,KAAI,SAAAM,GAAC,OAAIR,MAAMQ,EAAEW,QAAQlB,KAAK,CACvC7B,KAAMJ,EACNM,KAAMkC,EAAElC,KACRoD,YAAY,EACZC,UAAU,OACVC,OAAO1B,KAAI,SAACM,EAAGJ,GAAJ,mBAAC,eACTI,GADQ,IAEXjB,GAAI,IAAOa,EACX5B,SAAU,CAAEC,EAAG2B,EAAIlC,EAAWQ,EAAG2B,KAAKC,MAAMF,EAAIlC,SAEpDkD,cAAeA,IAIjBJ,EAAexB,EAAgByB,EAAoBjD,OAAQiD,EAAoB/C,UAAW+C,EAAoBC,gBC/B9GW,EAAcC,YAAgB,CAAEC,UHmDN,WAAmC,IAAlCC,EAAiC,uDAAzBhB,EAAciB,EAAW,uCACxDC,EAAkB,SAAChE,EAAWC,GAChC6D,EAAQxC,EAAgBtB,EAAWC,IAGjCgE,EAAkB,SAACC,EAAQC,GAC7B,IAAMC,EAAON,EAAMjC,MAAMwC,MAAK,SAAAd,GAAC,OAAIA,EAAElC,KAAO6C,KACtC9D,EAAO0D,EAAM7D,MAAMoE,MAAK,SAAA/B,GAAC,OAAIA,EAAEjB,KAAO8C,KAC5C,SAAKC,IAAShE,KAGVA,EAAKA,OAASV,EAAKW,MAAQD,EAAKA,OAASV,EAAKe,OAG9CL,EAAKA,OAASV,EAAKiB,MACXP,EAAKE,SAASC,IAAM6D,EAAK9D,SAASC,GAAK6D,EAAK9D,SAASE,EAAIJ,EAAKE,SAASE,GAC+E,IAAtJsD,EAAM7D,MAAMyC,QAAO,SAAAJ,GAAC,OAAIA,EAAEE,SAAWF,EAAEhC,SAASC,IAAM6D,EAAK9D,SAASC,GAAK+B,EAAEhC,SAASE,EAAI4D,EAAK9D,SAASE,GAAK8B,EAAEhC,SAASE,EAAIJ,EAAKE,SAASE,KAAGmC,QAC3IvC,EAAKE,SAASC,IAAM6D,EAAK9D,SAASC,GAAK6D,EAAK9D,SAASE,EAAIJ,EAAKE,SAASE,GAC+E,IAAtJsD,EAAM7D,MAAMyC,QAAO,SAAAJ,GAAC,OAAIA,EAAEE,SAAWF,EAAEhC,SAASC,IAAM6D,EAAK9D,SAASC,GAAK+B,EAAEhC,SAASE,EAAI4D,EAAK9D,SAASE,GAAK8B,EAAEhC,SAASE,EAAIJ,EAAKE,SAASE,KAAGmC,QAC3IvC,EAAKE,SAASE,IAAM4D,EAAK9D,SAASE,GAAK4D,EAAK9D,SAASC,EAAIH,EAAKE,SAASC,GAC+E,IAAtJuD,EAAM7D,MAAMyC,QAAO,SAAAJ,GAAC,OAAIA,EAAEE,SAAWF,EAAEhC,SAASE,IAAM4D,EAAK9D,SAASE,GAAK8B,EAAEhC,SAASC,EAAI6D,EAAK9D,SAASC,GAAK+B,EAAEhC,SAASC,EAAIH,EAAKE,SAASC,KAAGoC,QAC3IvC,EAAKE,SAASE,IAAM4D,EAAK9D,SAASE,GAAK4D,EAAK9D,SAASC,EAAIH,EAAKE,SAASC,GAC+E,IAAtJuD,EAAM7D,MAAMyC,QAAO,SAAAJ,GAAC,OAAIA,EAAEE,SAAWF,EAAEhC,SAASE,IAAM4D,EAAK9D,SAASE,GAAK8B,EAAEhC,SAASC,EAAI6D,EAAK9D,SAASC,GAAK+B,EAAEhC,SAASC,EAAIH,EAAKE,SAASC,KAAGoC,OAE/IvC,EAAKE,SAASC,IAAM6D,EAAK9D,SAASC,GAAqD,IAAhD4B,KAAKmC,IAAIlE,EAAKE,SAASE,EAAI4D,EAAK9D,SAASE,IAChFJ,EAAKE,SAASE,IAAM4D,EAAK9D,SAASE,GAAqD,IAAhD2B,KAAKmC,IAAIlE,EAAKE,SAASC,EAAI6D,EAAK9D,SAASC,MAGtFgE,EAAmB,SAAC5C,EAAgB6C,GACtC,IAAMC,EAAeX,EAAM7D,MAAMoE,MAAK,SAAA/B,GAAC,OAAIA,EAAEjB,KAAOM,KAC9C+C,EAAgBZ,EAAM7D,MAAMoE,MAAK,SAAA/B,GAAC,OAAIA,EAAEjB,KAAOmD,KACrD,IAAKC,IAAiBC,GAAiBD,EAAavE,OAASwE,EAAcxE,OAASuE,EAAajC,QAC7F,OAAO,EAEX,IAAMmC,EAAmBb,EAAMjC,MAAMwC,MAAK,SAAAd,GAAC,OAAIA,EAAEjD,SAASC,IAAMkE,EAAanE,SAASC,GAAKgD,EAAEjD,SAASE,IAAMiE,EAAanE,SAASE,KAClI,QAAKmE,GAGEV,EAAgBU,EAAiBtD,GAAIqD,EAAcrD,KAGxDuD,EAAkB,SAACT,GACrB,GAAIL,EAAMhE,SAAWgE,EAAMvC,cAA3B,CAGA,IAAMnB,EAAO0D,EAAM7D,MAAMoE,MAAK,SAAA/B,GAAC,OAAIA,EAAEjB,KAAO8C,KAC5C,GAAK/D,IAAQ0D,EAAMrC,kBAGnB,GAAIrB,EAAKF,OAAS4D,EAAMhE,QAAUM,EAAKoC,SAAWpC,EAAKmC,aAAc,CACjE,IAAMmC,EAAgBZ,EAAM7D,MAAMoE,MAAK,SAAA/B,GAAC,OAAIA,EAAEjB,KAAOyC,EAAMpC,kBAC3D,IAAKgD,EACD,OAEJZ,EAAK,2BACEA,GADF,IAEDrC,mBAAmB,EACnBE,eAAgBvB,EAAKiB,GACrBpB,MAAQ6D,EAAM7D,MAAM+B,KAAI,SAAAM,GAAC,OAAIA,EAAEjB,KAAOyC,EAAMpC,eAAf,2BACtBY,GADsB,IAEzBhC,SAAU,CACNC,EAAGH,EAAKE,SAASC,EAAIsE,OAAOH,EAAcpE,SAASC,GAAGuE,cAAc1E,EAAKE,SAASC,GAClFC,EAAGJ,EAAKE,SAASE,EAAIqE,OAAOH,EAAcpE,SAASE,GAAGsE,cAAc1E,EAAKE,SAASE,MAJ7D,2BAOtB8B,GAPsB,IAQzBC,cAAc,OAElBX,QAAQ,SAELxB,EAAKF,OAAS4D,EAAMhE,QAAUgE,EAAMpC,iBAAmBtB,EAAKiB,GACnEyC,EAAK,2BACEA,GADF,IAEDpC,eAAgB,KAChBG,MAAOiC,EAAMjC,MAAMG,KAAI,SAAAuB,GAAC,kCACjBA,GADiB,IAEpBlB,aAAa,OAEjBpC,MAAO6D,EAAM7D,MAAM+B,KAAI,SAAAM,GAAC,kCACjBA,GADiB,IAEpBC,cAAc,SAGfnC,EAAKF,OAAS4D,EAAMhE,QAAUgE,EAAMpC,iBAAmBtB,EAAKiB,KACnEyC,EAAK,2BACEA,GADF,IAEDpC,eAAgBN,EAAQC,GACxBQ,MAAOiC,EAAMjC,MAAMG,KAAI,SAAAuB,GAAC,kCACjBA,GADiB,IAEpBlB,YAAa4B,EAAgBV,EAAElC,GAAIjB,EAAKiB,SAE5CpB,MAAO6D,EAAM7D,MAAM+B,KAAI,SAAAM,GAAC,kCACjBA,GADiB,IAEpBC,aAAcgC,EAAiBjC,EAAEjB,GAAIjB,EAAKiB,cAMpD0D,EAAkB,SAACZ,EAAQD,GAC7B,IAAM9D,EAAO0D,EAAM7D,MAAMoE,MAAK,SAAA/B,GAAC,OAAIA,EAAEjB,KAAO8C,KACtCC,EAAON,EAAMjC,MAAMwC,MAAK,SAAAd,GAAC,OAAIA,EAAElC,KAAO6C,KACvC9D,GAASgE,GAASA,EAAK/B,cAG5ByB,EAAK,2BACEA,GADF,IAED7D,MAAO6D,EAAM7D,MAAM+B,KAAI,SAAAM,GAAC,OAAIA,EAAEjB,KAAOjB,EAAKiB,GAAd,2BACrBiB,GADqB,IAExBhC,SAAU8D,EAAK9D,WAFS,2BAIrBgC,GAJqB,IAKxBC,cAAc,OAElBV,MAAOiC,EAAMjC,MAAMG,KAAI,SAAAuB,GAAC,kCACjBA,GADiB,IAEpBlB,aAAa,OAEjBX,eAAgB,SAIlBsD,EAA0B,SAACd,GAC7B,GAAIJ,EAAMhE,SAAWgE,EAAMvC,cAA3B,CAGA,IAAMnB,EAAO0D,EAAM7D,MAAMoE,MAAK,SAAA/B,GAAC,OAAIA,EAAEjB,KAAOyC,EAAMpC,kBAC5C0C,EAAON,EAAMjC,MAAMwC,MAAK,SAAAd,GAAC,OAAIA,EAAElC,KAAO6C,KACvC9D,GAASgE,GAASA,EAAK/B,cAAeyB,EAAMrC,oBAGjDsD,EAAgBjB,EAAMpC,eAAgBwC,GACtCJ,EAAMvC,cAAgBuC,EAAMvC,gBAAkB5B,EAAKI,IAAMJ,EAAKQ,KAAOR,EAAKI,IAC1E+D,EAAMlC,QAAS,KAGbqD,EAAgB,WAClB,IAAMC,EAAapB,EAAM7D,MAAMyC,QAAO,SAAAJ,GAAC,OAAIA,EAAEE,YACxC0C,GAAcA,EAAWC,OAAM,SAAA7C,GAAC,OAAIA,EAAElC,OAASV,EAAKW,MAAQiC,EAAElC,OAASV,EAAKe,QAC7EqD,EAAMtC,OAAS7B,EAAKyF,KACZF,EAAWb,MAAK,SAAA/B,GAAC,OAAIA,EAAEpC,OAASP,EAAKI,KAAOuC,EAAElC,OAASV,EAAKW,QAE5D6E,EAAWb,MAAK,SAAA/B,GAAC,OAAIA,EAAEpC,OAASP,EAAKQ,MAAQmC,EAAElC,OAASV,EAAKW,UACrEyD,EAAMtC,OAAS7B,EAAKI,KAFpB+D,EAAMtC,OAAS7B,EAAKQ,MAMtBkF,EAAW,SAAClB,GACd,IAAM/D,EAAO0D,EAAM7D,MAAMoE,MAAK,SAAA/B,GAAC,OAAIA,EAAEjB,KAAO8C,KAC5C,GAAK/D,GAASA,EAAKoC,QAAnB,CAGA,IAAM8C,EAAkBxB,EAAM7D,MAAMyC,QAAO,SAAAJ,GAAC,OAAIA,EAAEpC,OAASE,EAAKF,QAAMyC,OAChE4C,EAAiBzB,EAAM7D,MAAMyC,QAAO,SAAAJ,GAAC,OAAIA,EAAEpC,OAASE,EAAKF,OAASoC,EAAEE,WAASG,OACnFmB,EAAK,2BACEA,GADF,IAED7D,MAAO6D,EAAM7D,MAAM+B,KAAI,SAAAM,GAAC,OAAIA,EAAEjB,KAAO8C,EAAT,2BACrB7B,GADqB,IAExBE,SAAS,EACTD,cAAc,EACdjC,SAAU,CACNC,EAAGgF,EAAiBpD,KAAKS,KAAK0C,EAAkBxB,EAAM9D,WACtDQ,EAAG2B,KAAKC,MAAMmD,EAAiBpD,KAAKS,KAAK0C,EAAkBxB,EAAM9D,eAErEsC,SAINkD,EAAgB,WAClB,IAAMf,EAAeX,EAAM7D,MAAMoE,MAAK,SAAA/B,GAAC,OAAIA,EAAEjB,KAAOyC,EAAMnC,kBACpD+C,EAAgBZ,EAAM7D,MAAMoE,MAAK,SAAA/B,GAAC,OAAIA,EAAEjB,KAAOyC,EAAMpC,kBAC3D,GAAK+C,GAAiBC,GAAkBZ,EAAMrC,kBAA9C,CAGA,GAAKgD,EAAarE,KAAOsE,EAActE,MAClCqE,EAAarE,OAASV,EAAKe,MAAQiE,EAActE,OAASV,EAAKkB,OAC/D6D,EAAarE,OAASV,EAAKsB,SAAW0D,EAActE,OAASV,EAAKgB,IAAM,CACzE,IAAMiE,EAAmBb,EAAMjC,MAAMwC,MAAK,SAAAd,GAAC,OAAIA,EAAEjD,SAASC,IAAMkE,EAAanE,SAASC,GAAKgD,EAAEjD,SAASE,IAAMiE,EAAanE,SAASE,KAClI6E,EAASZ,EAAapD,IACtB0D,EAAgBL,EAAcrD,GAAIsD,EAAiBtD,SAC5CoD,EAAarE,KAAOsE,EAActE,MAGzCiF,EAASZ,EAAapD,IAFtBgE,EAASX,EAAcrD,IAK3B4D,IACAnB,EAAK,2BACEA,GADF,IAED7D,MAAO6D,EAAM7D,MAAM+B,KAAI,SAAAM,GAAC,kCACjBA,GADiB,IAEpBC,cAAc,OAElBV,MAAOiC,EAAMjC,MAAMG,KAAI,SAAAuB,GAAC,kCACjBA,GADiB,IAEpBlB,aAAa,OAEjBZ,mBAAmB,EACnBC,eAAgB,KAChBC,eAAgB,KAChBJ,cAAeuC,EAAMvC,gBAAkB5B,EAAKI,IAAMJ,EAAKQ,KAAOR,EAAKI,IACnE6B,QAAQ,MAIV6D,EAAY,SAACvE,GACf4C,EAAK,2BACEA,GADF,IAED5C,OAAQA,KAIVwE,EAAY,SAAC5F,GACfgE,EAAK,2BACEA,GADF,IAEDhE,OAAmB,IAAXA,EAAeH,EAAKI,IAAMJ,EAAKQ,QAIzCwF,EAAW,SAAC1F,GACd,IAAM2F,EAAYzD,KAAK0D,IAAL,MAAA1D,KAAI,YAAQ2B,EAAM7D,MAAM+B,KAAI,SAAAM,GAAC,OAAIA,EAAEjB,OAA/B,QAAoC,OACpDyE,EAAoB3D,KAAK0D,IAAL,MAAA1D,KAAI,YAAQ2B,EAAMrB,aAAaT,KAAI,SAAAuB,GAAC,OAAIA,EAAElC,OAAtC,QAA2C,OACnE0E,EAAqB5D,KAAK0D,IAAL,MAAA1D,KAAI,YAAQ2B,EAAMjB,cAAcb,KAAI,SAAAuB,GAAC,OAAIA,EAAElC,OAAvC,QAA4C,OAC3EyC,EAAK,2BACEA,GADF,IAED7D,MAAO6D,EAAM7D,MAAM+F,OAAO/F,EAAM+B,KAAI,SAACM,EAAGJ,GAAJ,mBAAC,eAC9BI,GAD6B,IAEhCjB,GAAIuE,EAAY1D,EAAI,EACpBK,cAAc,EACdC,SAAS,QAEbC,aAAcqB,EAAMrB,aAAauD,OAAO/F,EAAMyC,QAAO,SAAAJ,GAAC,OAAIA,EAAEpC,OAASP,EAAKI,OAAKiC,KAAI,SAACC,EAAGC,GAAJ,MAAW,CAC1Fb,GAAIyE,EAAoB5D,EAAI,OAEhCW,cAAeiB,EAAMjB,cAAcmD,OAAO/F,EAAMyC,QAAO,SAAAJ,GAAC,OAAIA,EAAEpC,OAASP,EAAKQ,QAAM6B,KAAI,SAACC,EAAGC,GAAJ,MAAW,CAC7Fb,GAAI0E,EAAqB7D,EAAI,SAGrC4B,EAAK,2BACEA,GADF,IAEDrB,aAAcqB,EAAMrB,aAAaT,KAAI,SAACuB,EAAGrB,GAAJ,mBAAC,eAC/BqB,GAD8B,IAEjCjD,SAAU,CACNC,EAAG2B,EAAIC,KAAKS,KAAKkB,EAAMrB,aAAaE,OAASmB,EAAM9D,WACnDQ,EAAG2B,KAAKC,MAAMF,EAAIC,KAAKS,KAAKkB,EAAMrB,aAAaE,OAASmB,EAAM9D,kBAGtE6C,cAAeiB,EAAMjB,cAAcb,KAAI,SAACuB,EAAGrB,GAAJ,mBAAC,eACjCqB,GADgC,IAEnCjD,SAAU,CACNC,EAAG2B,EAAIC,KAAKS,KAAKkB,EAAMjB,cAAcF,OAASmB,EAAM9D,WACpDQ,EAAG2B,KAAKC,MAAMF,EAAIC,KAAKS,KAAKkB,EAAMjB,cAAcF,OAASmB,EAAM9D,qBAMzEiG,EAAc,SAACC,GACjB,GAAKpC,EAAMvC,cAUPuC,EAAK,2BACEoC,GADF,IAEDpG,OAAQgE,EAAMhE,OACd8B,QAAQ,QAbU,CACtB,IAAMuE,EAAaD,EAASjG,MAAMyC,QAAO,SAAAJ,GAAC,OAAIA,EAAEpC,OAAS4D,EAAMhE,UAC/D6F,EAASQ,GACLA,EAAWxD,SACXmB,EAAK,2BACEA,GADF,IAEDvC,cAAe5B,EAAKI,SAYpC,GAAI+D,EAAMtC,OACN,OAAOsC,EArRmD,IAwRtD3C,EAAkB4C,EAAlB5C,KAAMC,EAAY2C,EAAZ3C,QAEd,OAAQD,GACJ,IDpV2B,sBCqVvB6C,EAAgB5C,EAAQpB,UAAWoB,EAAQnB,OAC3C,MACJ,IDtV8C,yCCuV1C+E,EAAwB5D,EAAQC,IAChC,MACJ,IDxVoC,+BCyVhCuD,EAAgBxD,EAAQC,IACxB,MACJ,ID1ViC,4BC2V7BmE,IACA,MACJ,ID5V8B,yBC6V1BxB,EAAgBnE,EAAiBG,UAAW,IAC5CyF,EAAUrE,EAAQC,IAClB,MACJ,ID/V6B,wBCgWzBqE,EAAUtE,EAAQtB,QAClB,MACJ,IDjW4B,uBCkWxB6F,EAASvE,EAAQnB,OACjB,MACJ,IDnW+B,0BCoW3BgG,EAAY7E,EAAQ0C,OAM5B,OAAOA,GG3WwDsC,aDiChC,WAAmC,IAAlCtC,EAAiC,uDAAzBhB,EAAciB,EAAW,uCAC3DE,EAAkB,SAAC5C,GACrB,IAAM+C,EAAON,EAAMjC,MAAMwC,MAAK,SAAAd,GAAC,OAAIA,EAAElC,KAAOA,KACtCgF,EAAavC,EAAM7D,MAAMoE,MAAK,SAAA/B,GAAC,OAAKA,EAAEmB,UAAYnB,EAAEhC,UAAYgC,EAAEhC,SAASC,IAAM6D,EAAK9D,SAASC,GAAK+B,EAAEhC,SAASE,IAAM4D,EAAK9D,SAASE,KACzI,OAAOsD,EAAMZ,cAAcC,SAASiB,EAAK9D,SAASE,KAAO6F,GAGrDlF,EAAkB4C,EAAlB5C,KAAMC,EAAY2C,EAAZ3C,QAEd,GEhDuC,gCFgDnCD,EACA,OAAO,2BACA2C,GADP,IAEI7D,MAAO6D,EAAM7D,MAAM+B,KAAI,SAAAM,GAAC,kCAAUA,GAAV,IAAakB,WAAYlB,EAAEjB,KAAOD,EAAQC,KAAOiB,EAAEkB,kBAInF,GEtDqD,8CFsDjDrC,EAAoD,CACpD,IAAMiD,EAAON,EAAMjC,MAAMwC,MAAK,SAAAd,GAAC,OAAIA,EAAElC,KAAOD,EAAQC,MAC9CiF,EAAexC,EAAM7D,MAAMoE,MAAK,SAAA/B,GAAC,OAAIA,EAAEkB,cAC7C,OAAKY,EAAK/B,aAAgBiE,GAG1BxC,EAAM7D,MAAQ6D,EAAM7D,MAAM+B,KAAI,SAAAM,GAAC,OAAIA,EAAEjB,KAAOiF,EAAajF,GAAtB,2BAAgCiB,GAAhC,IAAmCkB,YAAY,EAAOlD,SAAU8D,EAAK9D,SAAUmD,UAAU,IAAUnB,KACtIwB,EAAMjC,MAAQiC,EAAMjC,MAAMG,KAAI,SAAAuB,GAAC,kCAAUA,GAAV,IAAalB,YAAa4B,EAAgBV,EAAElC,SACpE,eACAyC,IALIA,EASf,GElEoD,6CFkEhD3C,EAAmD,CACnD,IAAMiD,EAAON,EAAMV,KAAKiB,MAAK,SAAAd,GAAC,OAAIA,EAAElC,KAAOD,EAAQC,MAC7CiF,EAAexC,EAAM7D,MAAMoE,MAAK,SAAA/B,GAAC,OAAIA,EAAEkB,cAC7C,OAAK8C,GAGLxC,EAAM7D,MAAQ6D,EAAM7D,MAAM+B,KAAI,SAAAM,GAAC,OAAIA,EAAEjB,KAAOiF,EAAajF,GAAtB,2BAAgCiB,GAAhC,IAAmCkB,YAAY,EAAOlD,SAAU8D,EAAK9D,SAAUmD,UAAU,IAASnB,KACrIwB,EAAMjC,MAAQiC,EAAMjC,MAAMG,KAAI,SAAAuB,GAAC,kCAAUA,GAAV,IAAalB,YAAa4B,EAAgBV,EAAElC,SACpE,eACAyC,IALIA,EASf,ME9EkC,2BF8E9B3C,EACA2C,EAAQxC,EAAgBF,EAAQtB,OAAQiD,EAAoB/C,UAAW+C,EAAoBC,gBAIxFc,K,wBJtFClE,O,yBAAAA,I,yDAAAA,I,+BAAAA,I,sBAAAA,M,SKQmB2G,E,iBEA3BC,EAAS,KA+CAC,EAAY,SAAC5C,GAAD,IAAY6C,IAAZ,gEAAiC,SAACC,GACvDH,EAAOI,KAAK,aAAc/C,EAAU3C,OAAQ2C,EAAW6C,GAAW,SAAAG,GAC3C,OAAfA,EAAIC,QACJC,QAAQC,MAAR,qCAA4CH,EAAII,eAK/CC,EAAY,SAAChG,GAAD,OAAY,SAACyF,GAClCH,EAAOI,KAAK,aAAc1F,GAAQ,SAAA2F,GACX,OAAfA,EAAIC,QACJC,QAAQC,MAAR,oCAA2CH,EAAII,eClE9CE,EAAe,SAAArD,GAAK,OAAIA,EAAMD,W,iBCU9BuD,EAAO,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACbV,EAAWW,cACXzD,EAAY0D,YAAYJ,GAFQ,EAGVK,mBAAS,IAHC,mBAG/BtG,EAH+B,KAGvBuE,EAHuB,KAmBtC,OAPAgC,qBAAU,WACF5D,EAAU/D,QAAqC,IAA3B+D,EAAU5D,MAAM0C,SACpCgE,EHJoC,CAC5CxF,KAlBkC,yBAmBlCC,QAAS,CAAEtB,OGE0B+D,EAAU/D,UACvCuH,EAAazH,EAAK8H,kBAKtB,yBAAKC,UAAU,6BACX,yBAAKA,UAAU,uBAAuBC,MAAO,CAACC,MAAO,MACjD,yBAAKC,IAAKC,IAAMC,IAAI,KACpB,4BAAQL,UAAU,6FACVM,QAAS,kBAAMZ,EAAazH,EAAKsI,6BADzC,qBAIA,yBAAKP,UAAU,2BACX,2BAAOA,UAAU,4MACVQ,YAAY,eACZC,QAAS,SAAAC,GAAC,OAAI5C,EAAU4C,EAAEC,OAAOC,UACxC,4BAAQZ,UAAS,uEAAkEzG,EAAS,sBAAwB,iCAC5G0G,MAAO1G,EAAS,GAAK,CAACsH,QAAS,QAC/BP,QA5BK,WACV,KAAX/G,GAGJyF,EF4BgB,SAACzF,GAAD,OAAY,SAACyF,GACjCH,EAAOI,KAAK,YAAa1F,GAAQ,SAAA2F,GACV,OAAfA,EAAIC,QACJC,QAAQC,MAAR,oCAA2CH,EAAII,cE/B1CwB,CAASvH,MAsBN,mBAMJ,4BAAQyG,UAAU,6FACVM,QAAS,kBAAMS,OAAOC,SAASC,KAAO,uEAD9C,mBCtCHC,G,MAAQ,SAAC,GAAsB,IAApBxB,EAAmB,EAAnBA,aACdV,EAAWW,cACXzD,EAAY0D,YAAYJ,GAmB9B,OAZAM,qBAAU,WACD5D,EAAU3C,QACXyF,GHiBoB,SAACA,GAC7BH,EAAOI,KAAK,eAAe,SAAAC,GACJ,OAAfA,EAAIC,OACJH,EAAS1F,EAAmB4F,EAAI3F,SAEhC6F,QAAQC,MAAR,qCAA4CH,EAAII,gBGpBhDpD,EAAU/D,QAAqC,IAA3B+D,EAAU5D,MAAM0C,QACpC0E,EAAazH,EAAK8H,cAElB7D,EAAUtC,eACV8F,EAAazH,EAAKkJ,YAKtB,yBAAKnB,UAAU,sCACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,sBAAqB,8BAAW,8BAAW,8BAAW,+BACrE,yBAAKA,UAAU,cAAf,yCAGG9D,EAAU/D,QACT,yBAAK6H,UAAU,cAAf,0BACsB9D,EAAU3C,SAIxC,yBAAKyG,UAAU,6BACX,4BAAQA,UAAU,0JACVM,QAhCM,WACtBtB,EAASO,EAAUrD,EAAU3C,SAC7BmG,EAAazH,EAAKmJ,aA6BV,eC5CHC,EAAkB,SAAAlF,GAAK,OAAIA,EAAMsC,cCMjC6C,EAAQ,SAAC,GAAoE,IAAlEpF,EAAiE,EAAjEA,UAAWqF,EAAsD,EAAtDA,YAAaC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QACvE,OACI,yBAAK1B,UAAU,8BACX,yBAAKA,UAAU,mBAAf,+BACmB9D,EAAU/D,SAAWH,EAAKI,IAAM,QAAU,SAD7D,WAGA,yBACI4H,UAAU,WACVC,MAAO,CAACC,MAAM,GAAD,OAA2B,EAAtBhE,EAAU7D,UAAf,OAAmCsJ,OAAO,GAAD,OAAuF,GAAjFzF,EAAU7D,UAAYmC,KAAKS,KAAKiB,EAAU5D,MAAM0C,OAASkB,EAAU7D,YAAkB,EAA3F,SAErD6D,EAAUhC,MAAMG,KAAI,SAAAoC,GAAI,OACrB,yBACIuD,UAAU,sEACVC,MAAO,CAAC2B,KAAK,GAAD,OAAuB,EAAlBnF,EAAK9D,SAASC,EAAnB,OAA+BiJ,IAAI,GAAD,OAAuB,EAAlBpF,EAAK9D,SAASE,EAAnB,QAC9CyH,QAAS,kBAAMkB,EAAa/E,EAAK/C,KACjCoI,IAAKrF,EAAK/C,IAEV,yBAAKsG,UAAS,aAAQvD,EAAK/B,YAAc,QAAU,OAArC,qGAGtB,yBACIsF,UAAU,0CACVC,MAAO,CAACC,MAAM,GAAD,OAA2B,EAAtBhE,EAAU7D,UAAf,OAAmCwJ,IAAI,GAAD,OAA2B,EAAtB3F,EAAU7D,UAAgB,EAA/B,SAFvD,gCAMC6D,EAAUT,KAAKpB,KAAI,SAAAoC,GAAI,OACpB,yBACIuD,UAAU,sEACVC,MAAO,CAAC2B,KAAK,GAAD,OAAuB,EAAlBnF,EAAK9D,SAASC,EAAnB,OAA+BiJ,IAAI,GAAD,OAAuB,EAAlBpF,EAAK9D,SAASE,EAA8B,EAAtBqD,EAAU7D,UAAgB,EAArD,QAC9CiI,QAAS,kBAAMmB,EAAYhF,EAAK/C,KAChCoI,IAAKrF,EAAK/C,IAEV,yBAAKsG,UAAU,oJAGtB9D,EAAU5D,MAAM+B,KAAI,SAAA5B,GAAI,OACrB,yBACIuH,UAAU,+GACVC,MAAO,CAAC2B,KAAK,GAAD,OAAuB,EAAlBnJ,EAAKE,SAASC,EAAnB,OAA+BiJ,IAAI,GAAD,OAAuB,EAAlBpJ,EAAKE,SAASE,GAASJ,EAAKqD,SAAiC,EAAtBI,EAAU7D,UAAgB,EAAI,GAA1E,QAC9CiI,QAAS,kBAAMiB,EAAY9I,EAAKiB,KAChCoI,IAAKrJ,EAAKiB,IAEV,yBAAKsG,UAAS,aAAQvH,EAAKF,KAAb,YAAqBE,EAAKoD,WAAa,IAAM,IAA7C,wDACTpD,EAAKA,OAASV,EAAKe,KAAO,eAAOL,EAAKA,OAASV,EAAKW,KAAO,eAAOD,EAAKA,UAIpF,yBACIuH,UAAU,4CACVC,MAAO,CAAC2B,KAAK,GAAD,OAA2B,EAAtB1F,EAAU7D,UAAgB,EAA/B,OAAuCwJ,IAAI,GAAD,OAA2F,GAArF3F,EAAU7D,UAAYmC,KAAKS,KAAKiB,EAAU5D,MAAM0C,OAASkB,EAAU7D,WAAa,GAAS,IAA/F,SAEtD,4BACI2H,UAAS,uEAAkE9D,EAAU5D,MAAMyJ,MAAK,SAAApH,GAAC,OAAIA,EAAEmB,YAAY,gCAAkC,uBACrJmE,MAAO/D,EAAU5D,MAAMyJ,MAAK,SAAApH,GAAC,OAAIA,EAAEmB,YAAY,CAAC+E,QAAS,QAAU,GACnEP,QAASoB,GAHb,iBCzCPM,EAAU,SAAC,GAAsB,IAApBtC,EAAmB,EAAnBA,aAChBxD,EAAY0D,YAAYJ,GACxBf,EAAemB,YAAYyB,GAC3BrC,EAAWW,cAoBjB,OAPAG,qBAAU,WACF5D,EAAU/D,QAAU+D,EAAU5D,MAAMyC,QAAO,SAAAJ,GAAC,OAAIA,EAAEpC,OAAS2D,EAAU/D,UAAQ6C,OAAS,IACtFgE,EAASF,EAAU5C,IACnBwD,EAAazH,EAAKsI,+BAKtB,yBAAKP,UAAU,6BACX,yBAAKA,UAAU,qCACX,kBAAC,EAAD,CACI9D,UAAWuC,EACX8C,YAvBQ,SAAC/E,GAAD,OAAYwC,EPjBA,SAACxC,GAAD,MAAa,CACjDhD,KANuC,8BAOvCC,QAAS,CAAEC,GAAI8C,IOe8ByF,CAAyBzF,KAwBtDgF,aAvBS,SAACU,GAAD,OAAiBlD,EPbK,SAACkD,GAAD,MAAkB,CACjE1I,KAVqD,4CAWrDC,QAAS,CAAEC,GAAIwI,IOWoCC,CAAoCD,KAwBvET,YAvBQ,SAACW,GAAD,OAAgBpD,EPTM,SAACoD,GAAD,MAAiB,CAC/D5I,KAdoD,2CAepDC,QAAS,CAAEC,GAAI0I,IOOkCC,CAAmCD,KAwBpEV,QAtBI,WACZjD,EAAanG,MAAMyJ,MAAK,SAAApH,GAAC,OAAIA,EAAEmB,aAGnCkD,EZSqC,CACzCxF,KAlCgC,uBAmChCC,QAAS,CAAEnB,MYXoBmG,EAAanG,eCxBnCgJ,EAAQ,SAAC,GAAiE,IAA/DpF,EAA8D,EAA9DA,UAAWqF,EAAmD,EAAnDA,YAAaC,EAAsC,EAAtCA,aAAcc,EAAwB,EAAxBA,kBAC1D,OACI,oCACI,yBAAKtC,UAAU,oBACT9D,EAAUrC,QAAX,UAAwBqC,EAAUtC,gBAAkB5B,EAAKI,IAAM,QAAU,SAAzE,gCACA8D,EAAUrC,SAAW7B,EAAKI,KAAO,uCACjC8D,EAAUrC,SAAW7B,EAAKQ,MAAQ,wCAClC0D,EAAUrC,SAAW7B,EAAKyF,MAAQ,iBAEvC,yBACIuC,UAAU,WACVC,MAAO,CAACC,MAAM,GAAD,OAA2B,EAAtBhE,EAAU7D,UAAf,OAAmCsJ,OAAO,GAAD,OAA2B,EAAtBzF,EAAU7D,UAAf,SAErD6D,EAAUhC,MAAMG,KAAI,SAAAoC,GAAI,OACrB,yBACIuD,UAAU,sEACVC,MAAO,CAAC2B,KAAK,GAAD,OAAuB,EAAlBnF,EAAK9D,SAASC,EAAnB,OAA+BiJ,IAAI,GAAD,OAAuB,EAAlBpF,EAAK9D,SAASE,EAAnB,QAC9CyH,QAAS,kBAAMkB,EAAa/E,EAAK/C,KACjCoI,IAAKrF,EAAK/C,IAEV,yBAAKsG,UAAS,aAAQvD,EAAK/B,cAAgBwB,EAAUpC,kBAAoB,QAAU,OAArE,iEAGrBoC,EAAUhB,cAAcb,KAAI,SAAAoC,GAAI,OAC7B,yBACIuD,UAAU,sEACVC,MAAO,CAAC2B,KAAK,GAAD,OAA4F,IAArFpH,KAAKS,KAAKiB,EAAUhB,cAAcF,OAASkB,EAAU7D,WAAaoE,EAAK9D,SAASC,GAAS,EAAhG,OAAwGiJ,IAAI,GAAD,OAAuB,EAAlBpF,EAAK9D,SAASE,EAAnB,QACvHiJ,IAAKrF,EAAK/C,IAEV,yBAAKsG,UAAU,+JAGtB9D,EAAUpB,aAAaT,KAAI,SAAAoC,GAAI,OAC5B,yBACIuD,UAAU,sEACVC,MAAO,CAAC2B,KAAK,GAAD,OAA+C,GAAzC1F,EAAU7D,UAAYoE,EAAK9D,SAASC,GAAS,EAAnD,OAA2DiJ,IAAI,GAAD,OAAuB,EAAlBpF,EAAK9D,SAASE,EAAnB,QAC1EiJ,IAAKrF,EAAK/C,IAEV,yBAAKsG,UAAU,8JAGtB9D,EAAU5D,MAAM+B,KAAI,SAAA5B,GAAI,OACrB,yBACIuH,UAAS,+EAA0EvH,EAAKoC,QAAU,0CAA4C,IAC9IoF,MAAO,CACH2B,KAAK,GAAD,OACAnJ,EAAKF,OAASP,EAAKI,KAAQK,EAAKoC,QAChCpC,EAAKF,OAASP,EAAKQ,MAASC,EAAKoC,QACf,EAAlBpC,EAAKE,SAASC,EADoH,IAArF4B,KAAKS,KAAKiB,EAAUhB,cAAcF,OAASkB,EAAU7D,WAAaI,EAAKE,SAASC,GAAS,EADlD,GAAzCsD,EAAU7D,UAAYI,EAAKE,SAASC,GAAS,EADxF,OAKJiJ,IAAI,GAAD,OAAuB,EAAlBpJ,EAAKE,SAASE,EAAnB,QAEPyH,QAAS,kBAAMiB,EAAY9I,EAAKiB,KAChCoI,IAAKrJ,EAAKiB,IAEV,yBAAKsG,UAAS,aAAQvH,EAAKF,KAAb,YAAqBE,EAAKiB,KAAOwC,EAAUnC,eAAiB,IAAM,IAAlE,wGACImC,EAAUpC,mBAAqBrB,EAAKmC,aAAe,4DAA8D,GADrH,oDAEGsB,EAAUpC,mBAAqBrB,EAAKiB,KAAOwC,EAAUlC,eAArD,uCAAsGvB,EAAKF,OAASP,EAAKI,IAAMJ,EAAKQ,KAAOR,EAAKI,IAAhJ,0BAA8K,MAGtL8D,EAAUrC,QAAUpB,EAAKoC,SAAWpC,EAAKF,OAAS2D,EAAU/D,QAAU+D,EAAUlC,iBAAmBvB,EAAKiB,IAAMwC,EAAUnC,iBAAmBtB,EAAKiB,GAAK,IACtJjB,EAAKA,OAASV,EAAKe,KAAO,eAC1BL,EAAKA,OAASV,EAAKW,KAAO,eAC1BD,EAAKA,WAMxByD,EAAUrC,QACP,4BACImG,UAAU,wFACVC,MAAO/D,EAAU5D,MAAMyJ,MAAK,SAAApH,GAAC,OAAIA,EAAEmB,YAAY,CAAC+E,QAAS,QAAU,GACnEP,QAASgC,GAHb,aC9DHC,EAAO,SAAC,GAAsB,IAApB7C,EAAmB,EAAnBA,aACbV,EAAWW,cACXzD,EAAY0D,YAAYJ,GAgB9B,OAdAM,qBAAU,WACD5D,EAAUjC,QACX+E,EAASF,EAAU5C,IAEnBA,EAAUpC,mBACV0I,YAAW,WACPxD,EdA6B,CACzCxF,KAtBqC,4BAuBrCC,QAAS,ScDE,KAEHyC,EAAUrC,QACVmF,EAASO,EAAUrD,EAAU3C,YAKjC,yBAAKyG,UAAU,6BACX,yBAAKA,UAAU,qCACX,kBAAC,EAAD,CACI9D,UAAWA,EACXqF,YAAa,SAAC/E,GAAD,OAAYwC,EdlBL,SAACxC,GAAD,MAAa,CACjDhD,KAlBwC,+BAmBxCC,QAAS,CAAEC,GAAI8C,IcgBmCiG,CAAyBjG,KAC3DgF,aAAc,SAACjF,GAAD,OAAYyC,EdxBE,SAACzC,GAAD,MAAa,CACzD/C,KAdkD,yCAelDC,QAAS,CAAEC,GAAI6C,IcsBoCmG,CAAiCnG,KACpE+F,kBAAmB,kBAAM5C,EAAazH,EAAKmJ,iBCzBlDuB,EAAM,WACf,IAAM3D,EAAWW,cADI,EAEGE,mBAAS5H,EAAKmJ,WAFjB,mBAEdwB,EAFc,KAERC,EAFQ,KAQrB,OAJA/C,qBAAU,WACNd,GTT4B,SAACA,IACjCH,EAASiE,IAAG,2CAELC,GAAG,gBAAgB,SAAAC,GACtB5D,QAAQ6D,IAAI,eAAgBD,GAC5BhE,EAAS1F,EAAmB0J,EAAIzJ,SAChCyF,ENkBuC,CAC3CxF,KA9BiC,wBA+BjCC,QAAS,CAAEtB,OMpBqB6K,EAAI7K,aAGpC0G,EAAOkE,GAAG,iBAAiB,SAAAC,GACvB5D,QAAQ6D,IAAI,gBAAiBD,MAGjCnE,EAAOkE,GAAG,iBAAiB,SAAAC,GACvBhE,ENoBwC,CAC5CxF,KAtCmC,0BAuCnCC,QAAS,CAAE0C,MMtBuB6G,EAAI7G,SAClCiD,QAAQ6D,IAAI,gBAAiBD,MAGjCnE,EAAOkE,GAAG,eAAe,SAAAC,GACrB5D,QAAQ6D,IAAI,cAAeD,MAG/BnE,EAAOkE,GAAG,eAAe,SAAAC,GACrB5D,QAAQ6D,IAAI,cAAeD,WSb5B,CAAChE,IAEI4D,GACJ,KAAK3K,EAAKmJ,UACN,OAAO,kBAAC,EAAD,CAAM1B,aAAcmD,IAC/B,KAAK5K,EAAKsI,0BACN,OAAO,kBAAC,EAAD,CAAOb,aAAcmD,IAChC,KAAK5K,EAAK8H,aACN,OAAO,kBAAC,EAAD,CAASL,aAAcmD,IAClC,KAAK5K,EAAKkJ,QACN,OAAO,kBAAC,EAAD,CAAMzB,aAAcmD,IAC/B,QACI,OAAO,kBAAC,EAAD,CAAMnD,aAAcmD,MCzBjCK,EZEKC,YAAYnH,EAAa4C,EAAgBwE,YAAgBC,MYApEC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,OAEFM,SAASC,eAAe,W","file":"static/js/main.1f01e38c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.52e53c2a.png\";","export enum Unit {\n    NONE = 0,\n    SPY = 1,\n    SCOUT = 2,\n    MINER = 3,\n    SERGEANT = 4,\n    LIEUTENANT = 5,\n    CAPTAIN = 6,\n    MAJOR = 7,\n    COLONEL = 8,\n    GENERAL = 9,\n    MARSHAL = 10,\n    FLAG = -1,\n    BOMB = 98,\n    UNKNOWN = 99\n};\n","export enum Team {\n    NONE = \"gray\",\n    RED = \"red\",\n    BLUE = \"blue\"\n};\n","import { Unit } from \"../enums/Unit\";\nimport { Team } from \"../enums/Team\";\n\nexport const exampleGameState = {\n    player: Team.RED,\n    boardSize: 6,\n    units: [\n        { team: Team.BLUE, unit: Unit.FLAG,     position: { x: 0, y: 0} },\n        { team: Team.BLUE, unit: Unit.BOMB,     position: { x: 1, y: 0} },\n        { team: Team.BLUE, unit: Unit.BOMB,     position: { x: 2, y: 0} },\n        { team: Team.BLUE, unit: Unit.SPY,      position: { x: 3, y: 0} },\n        { team: Team.BLUE, unit: Unit.SCOUT,    position: { x: 4, y: 0} },\n        { team: Team.BLUE, unit: Unit.SCOUT,    position: { x: 5, y: 0} },\n        { team: Team.BLUE, unit: Unit.MINER,    position: { x: 0, y: 1} },\n        { team: Team.BLUE, unit: Unit.MINER,    position: { x: 1, y: 1} },\n        { team: Team.BLUE, unit: Unit.SERGEANT, position: { x: 2, y: 1} },\n        { team: Team.BLUE, unit: Unit.CAPTAIN,  position: { x: 3, y: 1} },\n        { team: Team.BLUE, unit: Unit.COLONEL,  position: { x: 4, y: 1} },\n        { team: Team.BLUE, unit: Unit.MARSHAL,  position: { x: 5, y: 1} },\n        { team: Team.RED,  unit: Unit.FLAG,     position: { x: 0, y: 4} },\n        { team: Team.RED,  unit: Unit.BOMB,     position: { x: 1, y: 4} },\n        { team: Team.RED,  unit: Unit.BOMB,     position: { x: 2, y: 4} },\n        { team: Team.RED,  unit: Unit.SPY,      position: { x: 3, y: 4} },\n        { team: Team.RED,  unit: Unit.SCOUT,    position: { x: 4, y: 4} },\n        { team: Team.RED,  unit: Unit.SCOUT,    position: { x: 5, y: 4} },\n        { team: Team.RED,  unit: Unit.MINER,    position: { x: 0, y: 5} },\n        { team: Team.RED,  unit: Unit.MINER,    position: { x: 1, y: 5} },\n        { team: Team.RED,  unit: Unit.SERGEANT, position: { x: 2, y: 5} },\n        { team: Team.RED,  unit: Unit.CAPTAIN,  position: { x: 3, y: 5} },\n        { team: Team.RED,  unit: Unit.COLONEL,  position: { x: 4, y: 5} },\n        { team: Team.RED,  unit: Unit.MARSHAL,  position: { x: 5, y: 5} }\n    ]\n};\n","export enum Page {\n    MAIN_PAGE,\n    WAITING_FOR_SECOND_PLAYER,\n    PREPARE_GAME,\n    IN_GAME\n};\n","export const GAME_STATE_NEW_GAME = \"GAME_STATE_NEW_GAME\";\nexport const GAME_STATE_MOVE_SELECTED_UNIT_ON_BOARD = \"GAME_STATE_MOVE_SELECTED_UNIT_ON_BOARD\";\nexport const GAME_STATE_HANDLE_UNIT_CLICK = \"GAME_STATE_HANDLE_UNIT_CLICK\";\nexport const GAME_STATE_CONCLUDE_FIGHT = \"GAME_STATE_CONCLUDE_FIGHT\";\nexport const GAME_STATE_SET_ROOM_ID = \"GAME_STATE_SET_ROOM_ID\";\nexport const GAME_STATE_SET_PLAYER = \"GAME_STATE_SET_PLAYER\";\nexport const GAME_STATE_ADD_UNITS = \"GAME_STATE_ADD_UNITS\";\nexport const GAME_STATE_UPDATE_STATE = \"GAME_STATE_UPDATE_STATE\";\n\nexport const gameStateNewGame = (boardSize, units) => ({\n    type: GAME_STATE_NEW_GAME,\n    payload: { boardSize: boardSize, units: units }\n});\n\nexport const gameStateMoveSelectedUnitOnBoard = (cellId) => ({\n    type: GAME_STATE_MOVE_SELECTED_UNIT_ON_BOARD,\n    payload: { id: cellId }\n});\n\nexport const gameStateHandleUnitClick = (unitId) => ({\n    type: GAME_STATE_HANDLE_UNIT_CLICK,\n    payload: { id: unitId }\n});\n\nexport const gameStateConcludeFight = () => ({\n    type: GAME_STATE_CONCLUDE_FIGHT,\n    payload: null\n});\n\nexport const gameStateSetRoomId = (roomId) => ({\n    type: GAME_STATE_SET_ROOM_ID,\n    payload: { id: roomId }\n});\n\nexport const gameStateSetPlayer = (player) => ({\n    type: GAME_STATE_SET_PLAYER,\n    payload: { player: player }\n});\n\nexport const gameStateAddUnits = (units) => ({\n    type: GAME_STATE_ADD_UNITS,\n    payload: { units: units }\n});\n\nexport const gameStateUpdateState = (state) => ({\n    type: GAME_STATE_UPDATE_STATE,\n    payload: { state: state }\n});\n","import { exampleGameState } from \"../../domain/exampleGameState\";\nimport { Team } from \"../../enums/Team\";\nimport { Unit } from \"../../enums/Unit\";\nimport {\n    GAME_STATE_NEW_GAME,\n    GAME_STATE_MOVE_SELECTED_UNIT_ON_BOARD,\n    GAME_STATE_HANDLE_UNIT_CLICK,\n    GAME_STATE_CONCLUDE_FIGHT,\n    GAME_STATE_SET_ROOM_ID,\n    GAME_STATE_SET_PLAYER,\n    GAME_STATE_ADD_UNITS,\n    GAME_STATE_UPDATE_STATE\n} from \"./actions\";\n\nconst getNewGameState = (boardSize, units) => {\n    return {\n        roomId: null,\n        player: null,\n        currentPlayer: null,\n        winner: null,\n        boardSize: boardSize,\n        isFightInProgress: false,\n        selectedUnitId: null,\n        attackedUnitId: null,\n        synced: true,\n        board: Array(boardSize ** 2).fill().map((_, i) => ({\n            id: i,\n            position: { x: i % boardSize, y: Math.floor(i / boardSize) },\n            isAvailable: false\n        })),\n        units: units.map((u, i) => ({\n            id: 1000 + i,\n            team: u.team,\n            unit: u.unit,\n            position: u.position,\n            isAttackable: false,\n            isAlive: true,\n        })),\n        graveyardRed: Array(units.filter(u => u.team === Team.RED).length).fill().map((_, i) => ({\n            id: 2000 + i,\n            position: {\n                x: i % Math.ceil(units.filter(u => u.team === Team.RED).length / boardSize),\n                y: Math.floor(i / Math.ceil(units.filter(u => u.team === Team.RED).length / boardSize))\n            }\n        })),\n        graveyardBlue: Array(units.filter(u => u.team === Team.BLUE).length).fill().map((_, i) => ({\n            id: 3000 + i,\n            position: {\n                x: i % Math.ceil(units.filter(u => u.team === Team.BLUE).length / boardSize),\n                y: Math.floor(i / Math.ceil(units.filter(u => u.team === Team.BLUE).length / boardSize))\n            }\n        }))\n    };\n}\n\nconst initialState = getNewGameState(exampleGameState.boardSize, exampleGameState.units);\n\nexport const gameStateReducer = (state = initialState, action) => {\n    const setNewGameState = (boardSize, units) => {\n        state = getNewGameState(boardSize, units);\n    }\n\n    const isCellAvailable = (cellId, unitId) => {\n        const cell = state.board.find(c => c.id === cellId);\n        const unit = state.units.find(u => u.id === unitId);\n        if (!cell || !unit) {\n            return false;\n        }\n        if (unit.unit === Unit.FLAG || unit.unit === Unit.BOMB) {\n            return false;\n        }\n        if (unit.unit === Unit.SCOUT) {\n            return (unit.position.x === cell.position.x && cell.position.y > unit.position.y &&\n                    state.units.filter(u => u.isAlive && u.position.x === cell.position.x && u.position.y < cell.position.y && u.position.y > unit.position.y).length === 0) ||\n                   (unit.position.x === cell.position.x && cell.position.y < unit.position.y &&\n                    state.units.filter(u => u.isAlive && u.position.x === cell.position.x && u.position.y > cell.position.y && u.position.y < unit.position.y).length === 0) ||\n                   (unit.position.y === cell.position.y && cell.position.x > unit.position.x &&\n                    state.units.filter(u => u.isAlive && u.position.y === cell.position.y && u.position.x < cell.position.x && u.position.x > unit.position.x).length === 0) ||\n                   (unit.position.y === cell.position.y && cell.position.x < unit.position.x &&\n                    state.units.filter(u => u.isAlive && u.position.y === cell.position.y && u.position.x > cell.position.x && u.position.x < unit.position.x).length === 0);\n        }\n        return (unit.position.x === cell.position.x && Math.abs(unit.position.y - cell.position.y) === 1) ||\n               (unit.position.y === cell.position.y && Math.abs(unit.position.x - cell.position.x) === 1);\n    }\n\n    const isUnitAttackable = (attackedUnitId, attackingUnitId) => {\n        const attackedUnit = state.units.find(u => u.id === attackedUnitId);\n        const attackingUnit = state.units.find(u => u.id === attackingUnitId);\n        if (!attackedUnit || !attackingUnit || attackedUnit.team === attackingUnit.team || !attackedUnit.isAlive) {\n            return false;\n        }\n        const attackedUnitCell = state.board.find(c => c.position.x === attackedUnit.position.x && c.position.y === attackedUnit.position.y);\n        if (!attackedUnitCell) {\n            return false;\n        }\n        return isCellAvailable(attackedUnitCell.id, attackingUnit.id);\n    }\n\n    const handleUnitClick = (unitId) => {\n        if (state.player !== state.currentPlayer) {\n            return;\n        }\n        const unit = state.units.find(u => u.id === unitId);\n        if (!unit || state.isFightInProgress) {\n            return;\n        }\n        if (unit.team !== state.player && unit.isAlive && unit.isAttackable) { // attack\n            const attackingUnit = state.units.find(u => u.id === state.selectedUnitId);\n            if (!attackingUnit) {\n                return;\n            }\n            state = {\n                ...state,\n                isFightInProgress: true,\n                attackedUnitId: unit.id,\n                units : state.units.map(u => u.id === state.selectedUnitId ? {\n                    ...u,\n                    position: {\n                        x: unit.position.x + String(attackingUnit.position.x).localeCompare(unit.position.x),\n                        y: unit.position.y + String(attackingUnit.position.y).localeCompare(unit.position.y)\n                    }\n                } : {\n                    ...u,\n                    isAttackable: false\n                }),\n                synced: false\n            }\n        } else if (unit.team === state.player && state.selectedUnitId === unit.id) { // deselect\n            state = {\n                ...state,\n                selectedUnitId: null,\n                board: state.board.map(c => ({\n                    ...c,\n                    isAvailable: false\n                })),\n                units: state.units.map(u => ({\n                    ...u,\n                    isAttackable: false\n                }))\n            };\n        } else if (unit.team === state.player && state.selectedUnitId !== unit.id) { // select\n            state = {\n                ...state,\n                selectedUnitId: payload.id,\n                board: state.board.map(c => ({\n                    ...c,\n                    isAvailable: isCellAvailable(c.id, unit.id)\n                })),\n                units: state.units.map(u => ({\n                    ...u,\n                    isAttackable: isUnitAttackable(u.id, unit.id)\n                }))\n            };\n        }\n    }\n\n    const moveUnitOnBoard = (unitId, cellId) => {\n        const unit = state.units.find(u => u.id === unitId);\n        const cell = state.board.find(c => c.id === cellId);\n        if (!unit || !cell || !cell.isAvailable) {\n            return;\n        }\n        state = {\n            ...state,\n            units: state.units.map(u => u.id === unit.id ? {\n                ...u,\n                position: cell.position\n            } : {\n                ...u,\n                isAttackable: false\n            }),\n            board: state.board.map(c => ({\n                ...c,\n                isAvailable: false\n            })),\n            selectedUnitId: null\n        };\n    }\n\n    const moveSelectedUnitOnBoard = (cellId) => {\n        if (state.player !== state.currentPlayer) {\n            return;\n        }\n        const unit = state.units.find(u => u.id === state.selectedUnitId);\n        const cell = state.board.find(c => c.id === cellId);\n        if (!unit || !cell || !cell.isAvailable || state.isFightInProgress) {\n            return;\n        }\n        moveUnitOnBoard(state.selectedUnitId, cellId);\n        state.currentPlayer = state.currentPlayer === Team.RED ? Team.BLUE : Team.RED;\n        state.synced = false;\n    }\n\n    const checkGameOver = () => {\n        const aliveUnits = state.units.filter(u => u.isAlive);\n        if (!aliveUnits || aliveUnits.every(u => u.unit === Unit.FLAG || u.unit === Unit.BOMB)) {\n            state.winner = Team.NONE; // tie\n        } else if (!aliveUnits.find(u => u.team === Team.RED && u.unit === Unit.FLAG)) {\n            state.winner = Team.BLUE;\n        } else if (!aliveUnits.find(u => u.team === Team.BLUE && u.unit === Unit.FLAG)) {\n            state.winner = Team.RED;\n        }\n    }\n\n    const killUnit = (unitId) => {\n        const unit = state.units.find(u => u.id === unitId);\n        if (!unit || !unit.isAlive) {\n            return;\n        }\n        const totalUnitsCount = state.units.filter(u => u.team === unit.team).length;\n        const deadUnitsCount = state.units.filter(u => u.team === unit.team && !u.isAlive).length;\n        state = {\n            ...state,\n            units: state.units.map(u => u.id === unitId ? {\n                ...u,\n                isAlive: false,\n                isAttackable: false,\n                position: {\n                    x: deadUnitsCount % Math.ceil(totalUnitsCount / state.boardSize),\n                    y: Math.floor(deadUnitsCount / Math.ceil(totalUnitsCount / state.boardSize))\n                }\n            } : u)\n        }\n    }\n\n    const concludeFight = () => {\n        const attackedUnit = state.units.find(u => u.id === state.attackedUnitId);\n        const attackingUnit = state.units.find(u => u.id === state.selectedUnitId);\n        if (!attackedUnit || !attackingUnit || !state.isFightInProgress) {\n            return;\n        }\n        if ((attackedUnit.unit < attackingUnit.unit) ||\n            (attackedUnit.unit === Unit.BOMB && attackingUnit.unit === Unit.MINER) ||\n            (attackedUnit.unit === Unit.MARSHAL && attackingUnit.unit === Unit.SPY)) {\n            const attackedUnitCell = state.board.find(c => c.position.x === attackedUnit.position.x && c.position.y === attackedUnit.position.y);\n            killUnit(attackedUnit.id);\n            moveUnitOnBoard(attackingUnit.id, attackedUnitCell.id);\n        } else if (attackedUnit.unit > attackingUnit.unit) {\n            killUnit(attackingUnit.id);\n        } else {\n            killUnit(attackedUnit.id);\n            killUnit(attackingUnit.id);\n        }\n        checkGameOver();\n        state = {\n            ...state,\n            units: state.units.map(u => ({\n                ...u,\n                isAttackable: false\n            })),\n            board: state.board.map(c => ({\n                ...c,\n                isAvailable: false\n            })),\n            isFightInProgress: false,\n            selectedUnitId: null,\n            attackedUnitId: null,\n            currentPlayer: state.currentPlayer === Team.RED ? Team.BLUE : Team.RED,\n            synced: false\n        };\n    }\n\n    const setRoomId = (roomId) => {\n        state = {\n            ...state,\n            roomId: roomId\n        };\n    }\n\n    const setPlayer = (player) => {\n        state = {\n            ...state,\n            player: player === 1 ? Team.RED : Team.BLUE\n        };\n    }\n\n    const addUnits = (units) => {\n        const maxUnitId = Math.max(...state.units.map(u => u.id), 1000);\n        const maxGraveyardRedId = Math.max(...state.graveyardRed.map(c => c.id), 2000);\n        const maxGraveyardBlueId = Math.max(...state.graveyardBlue.map(c => c.id), 3000);\n        state = {\n            ...state,\n            units: state.units.concat(units.map((u, i) => ({\n                ...u,\n                id: maxUnitId + i + 1,\n                isAttackable: false,\n                isAlive: true\n            }))),\n            graveyardRed: state.graveyardRed.concat(units.filter(u => u.team === Team.RED).map((_, i) => ({\n                id: maxGraveyardRedId + i + 1\n            }))),\n            graveyardBlue: state.graveyardBlue.concat(units.filter(u => u.team === Team.BLUE).map((_, i) => ({\n                id: maxGraveyardBlueId + i + 1\n            })))\n        };\n        state = {\n            ...state,\n            graveyardRed: state.graveyardRed.map((c, i) => ({\n                ...c,\n                position: {\n                    x: i % Math.ceil(state.graveyardRed.length / state.boardSize),\n                    y: Math.floor(i / Math.ceil(state.graveyardRed.length / state.boardSize))\n                }\n            })),\n            graveyardBlue: state.graveyardBlue.map((c, i) => ({\n                ...c,\n                position: {\n                    x: i % Math.ceil(state.graveyardBlue.length / state.boardSize),\n                    y: Math.floor(i / Math.ceil(state.graveyardBlue.length / state.boardSize))\n                }\n            }))\n        };\n    }\n\n    const updateState = (newState) => {\n        if (!state.currentPlayer) {\n            const enemyUnits = newState.units.filter(u => u.team !== state.player);\n            addUnits(enemyUnits);\n            if (enemyUnits.length) {\n                state = {\n                    ...state,\n                    currentPlayer: Team.RED\n                };\n            }\n        } else {\n            state = {\n                ...newState,\n                player: state.player,\n                synced: true\n            };\n        }\n    }\n\n    if (state.winner) {\n        return state;\n    }\n\n    const { type, payload } = action;\n\n    switch (type) {\n        case GAME_STATE_NEW_GAME:\n            setNewGameState(payload.boardSize, payload.units);\n            break;\n        case GAME_STATE_MOVE_SELECTED_UNIT_ON_BOARD:\n            moveSelectedUnitOnBoard(payload.id);\n            break;\n        case GAME_STATE_HANDLE_UNIT_CLICK:\n            handleUnitClick(payload.id);\n            break;\n        case GAME_STATE_CONCLUDE_FIGHT:\n            concludeFight();\n            break;\n        case GAME_STATE_SET_ROOM_ID:\n            setNewGameState(exampleGameState.boardSize, []);\n            setRoomId(payload.id);\n            break;\n        case GAME_STATE_SET_PLAYER:\n            setPlayer(payload.player);\n            break;\n        case GAME_STATE_ADD_UNITS:\n            addUnits(payload.units);\n            break;\n        case GAME_STATE_UPDATE_STATE:\n            updateState(payload.state);\n            break;\n        default:\n            break;\n    }\n\n    return state;\n};\n","import { Team } from \"../enums/Team\";\nimport { Unit } from \"../enums/Unit\";\n\nexport const examplePrepareState = {\n    player: Team.RED,\n    boardSize: 6,\n    availableUnits: [\n        { unit: Unit.FLAG,     amount: 1 },\n        { unit: Unit.BOMB,     amount: 2 },\n        { unit: Unit.SPY,      amount: 1 },\n        { unit: Unit.SCOUT,    amount: 2 },\n        { unit: Unit.MINER,    amount: 2 },\n        { unit: Unit.SERGEANT, amount: 1 },\n        { unit: Unit.CAPTAIN,  amount: 1 },\n        { unit: Unit.COLONEL,  amount: 1 },\n        { unit: Unit.MARSHAL,  amount: 1 }\n    ]\n};\n","import { examplePrepareState } from \"../../domain/examplePrepareState\";\nimport { Team } from \"../../enums/Team\";\nimport {\n    PREPARE_STATE_ACTIVATE_UNIT,\n    PREPARE_STATE_MOVE_SELECTED_UNIT_ON_BOARD,\n    PREPARE_STATE_MOVE_SELECTED_UNIT_ON_HAND,\n    PREPARE_STATE_NEW_GAME\n} from \"./actions\";\n\nconst getNewGameState = (player, boardSize, units) => {\n    const availableRows = player === Team.RED ? [boardSize - 2, boardSize - 1] : [0, 1];\n    return {\n        player: player,\n        boardSize: boardSize,\n        board: Array(boardSize ** 2).fill().map((_, i) => ({\n            id: i,\n            position: { x: i % boardSize, y: Math.floor(i / boardSize) },\n            isAvailable: availableRows.includes(Math.floor(i / boardSize))\n        })),\n        hand: Array(units.reduce((a, c) => c.amount + a, 0)).fill().map((_, i) => ({\n            id: 1000 + i,\n            position: { x: i % boardSize, y: Math.floor(i / boardSize) },\n        })),\n        units: units.map(u => Array(u.amount).fill({\n            team: player,\n            unit: u.unit,\n            isSelected: false,\n            isInHand: true\n        })).flat().map((u, i) => ({\n            ...u,\n            id: 2000 + i,\n            position: { x: i % boardSize, y: Math.floor(i / boardSize) },\n        })),\n        availableRows: availableRows\n    };\n};\n\nconst initialState = getNewGameState(examplePrepareState.player, examplePrepareState.boardSize, examplePrepareState.availableUnits);\n\nexport const prepareStateReducer = (state = initialState, action) => {\n    const isCellAvailable = (id) => {\n        const cell = state.board.find(c => c.id === id);\n        const unitOnCell = state.units.find(u => !u.isInHand && u.position && u.position.x === cell.position.x && u.position.y === cell.position.y);\n        return state.availableRows.includes(cell.position.y) && !unitOnCell;\n    }\n\n    const { type, payload } = action;\n\n    if (type === PREPARE_STATE_ACTIVATE_UNIT) {\n        return {\n            ...state,\n            units: state.units.map(u => ({ ...u, isSelected: u.id === payload.id && !u.isSelected }))\n        };\n    }\n\n    if (type === PREPARE_STATE_MOVE_SELECTED_UNIT_ON_BOARD) {\n        const cell = state.board.find(c => c.id === payload.id);\n        const selectedUnit = state.units.find(u => u.isSelected);\n        if (!cell.isAvailable || !selectedUnit) {\n            return state;\n        }\n        state.units = state.units.map(u => u.id === selectedUnit.id ? { ...u, isSelected: false, position: cell.position, isInHand: false } : u);\n        state.board = state.board.map(c => ({ ...c, isAvailable: isCellAvailable(c.id) }));\n        return {\n            ...state\n        };\n    }\n\n    if (type === PREPARE_STATE_MOVE_SELECTED_UNIT_ON_HAND) {\n        const cell = state.hand.find(c => c.id === payload.id);\n        const selectedUnit = state.units.find(u => u.isSelected);\n        if (!selectedUnit) {\n            return state;\n        }\n        state.units = state.units.map(u => u.id === selectedUnit.id ? { ...u, isSelected: false, position: cell.position, isInHand: true } : u);\n        state.board = state.board.map(c => ({ ...c, isAvailable: isCellAvailable(c.id) }));\n        return {\n            ...state\n        };\n    }\n\n    if (type === PREPARE_STATE_NEW_GAME) {\n        state = getNewGameState(payload.player, examplePrepareState.boardSize, examplePrepareState.availableUnits);\n        return state;\n    }\n\n    return state;\n};\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport { gameStateReducer } from \"./gameState/reducer\";\nimport { prepareStateReducer } from \"./prepareState/reducer\";\n\nconst rootReducer = combineReducers({ gameState: gameStateReducer, prepareState: prepareStateReducer });\n\nexport const configureStore = (preloadedState) => {\n    return createStore(rootReducer, preloadedState, applyMiddleware(thunk));\n}\n","export const PREPARE_STATE_ACTIVATE_UNIT = \"PREPARE_STATE_ACTIVATE_UNIT\";\nexport const PREPARE_STATE_MOVE_SELECTED_UNIT_ON_BOARD = \"PREPARE_STATE_MOVE_SELECTED_UNIT_ON_BOARD\";\nexport const PREPARE_STATE_MOVE_SELECTED_UNIT_ON_HAND = \"PREPARE_STATE_MOVE_SELECTED_UNIT_ON_HAND\";\nexport const PREPARE_STATE_NEW_GAME = \"PREPARE_STATE_NEW_GAME\";\n\nexport const prepareStateActivateUnit = (unitId) => ({\n    type: PREPARE_STATE_ACTIVATE_UNIT,\n    payload: { id: unitId }\n});\n\nexport const prepareStateMoveSelectedUnitOnBoard = (boardCellId) => ({\n    type: PREPARE_STATE_MOVE_SELECTED_UNIT_ON_BOARD,\n    payload: { id: boardCellId }\n});\n\nexport const prepareStateMoveSelectedUnitOnHand = (handCellId) => ({\n    type: PREPARE_STATE_MOVE_SELECTED_UNIT_ON_HAND,\n    payload: { id: handCellId }\n});\n\nexport const prepareStateNewGame = (player) => ({\n    type: PREPARE_STATE_NEW_GAME,\n    payload: { player: player }\n});\n","import io from \"socket.io-client\";\n\nimport {\n    gameStateSetRoomId,\n    gameStateSetPlayer,\n    gameStateUpdateState\n} from \"../../state/gameState/actions\";\n\nlet socket = null;\n\nexport const startListening = () => (dispatch) => {\n    socket = io(\"http://webprogramozas.inf.elte.hu:3030\");\n\n    socket.on(\"room-is-full\", msg => {\n        console.log(\"room-is-full\", msg);\n        dispatch(gameStateSetRoomId(msg.roomId));\n        dispatch(gameStateSetPlayer(msg.player));\n    });\n\n    socket.on(\"player-joined\", msg => {\n        console.log(\"player-joined\", msg);\n    });\n\n    socket.on(\"state-changed\", msg => {\n        dispatch(gameStateUpdateState(msg.state));\n        console.log(\"state-changed\", msg);\n    });\n\n    socket.on(\"action-sent\", msg => {\n        console.log(\"player-left\", msg);\n    });\n\n    socket.on(\"player-left\", msg => {\n        console.log(\"player-left\", msg);\n    });\n};\n\nexport const createRoom = () => (dispatch) => {\n    socket.emit(\"create-room\", ack => {\n        if (ack.status === 'ok') {\n            dispatch(gameStateSetRoomId(ack.roomId));\n        } else {\n            console.error(`error while creating room: ${ack.message}`);\n        }\n    });\n};\n\nexport const joinRoom = (roomId) => (dispatch) => {\n    socket.emit(\"join-room\", roomId, ack => {\n        if (ack.status !== 'ok') {\n            console.error(`error while joining room: ${ack.message}`);\n        }\n    });\n};\n\nexport const syncState = (gameState, broadcast = true) => (dispatch) => {\n    socket.emit(\"sync-state\", gameState.roomId, gameState, broadcast, ack => {\n        if (ack.status !== 'ok') {\n            console.error(`error while syncing state: ${ack.message}`);\n        }\n    });\n};\n\nexport const leaveRoom = (roomId) => (dispatch) => {\n    socket.emit(\"leave-room\", roomId, ack => {\n        if (ack.status !== 'ok') {\n            console.error(`error while leaving room: ${ack.message}`);\n        }\n    });\n};\n","export const getGameState = state => state.gameState;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { prepareStateNewGame } from \"../../state/prepareState/actions\";\nimport { joinRoom } from \"../../state/messages/actions\";\nimport { getGameState } from \"../../state/gameState/selectors\";\nimport { Page } from \"../../enums/Page.tsx\"\nimport logo from \"../../assets/logo.png\";\n\nexport const Home = ({ onPageChange }) => {\n    const dispatch = useDispatch();\n    const gameState = useSelector(getGameState);\n    const [roomId, setRoomId] = useState(\"\");\n\n    const onConnectButtonClick = () => {\n        if (roomId === \"\") {\n            return;\n        }\n        dispatch(joinRoom(roomId));\n    }\n\n    useEffect(() => {\n        if (gameState.player && gameState.units.length === 0) {\n            dispatch(prepareStateNewGame(gameState.player));\n            onPageChange(Page.PREPARE_GAME);\n        }\n    });\n\n    return (\n        <div className=\"flex h-screen bg-gray-800\">\n            <div className=\"flex flex-col m-auto\" style={{width: 330}}>\n                <img src={logo} alt=\"\" />\n                <button className=\"mx-4 mt-6 bg-yellow-600 hover:bg-yellow-700 text-white font-bold text-xl py-2 px-4 rounded\"\n                        onClick={() => onPageChange(Page.WAITING_FOR_SECOND_PLAYER)}>\n                    Új játék\n                </button>\n                <div className=\"mx-4 mt-2 flex flex-row\">\n                    <input className=\"w-1/2 mr-2 bg-transparent focus:bg-gray-700 border border-yellow-600 placeholder-yellow-700 focus:placeholder-yellow-500 text-yellow-600 font-bold rounded py-2 px-4 block appearance-none leading-normal\"\n                           placeholder=\"azonositó\"\n                           onInput={e => setRoomId(e.target.value)} />\n                    <button className={`bg-yellow-600 text-white font-bold text-xl py-2 px-4 rounded ${roomId ? \"hover:bg-yellow-700\" : \"opacity-50 cursor-not-allowed\"}`}\n                            style={roomId ? {} : {outline: \"none\"}}\n                            onClick={onConnectButtonClick}>\n                        Csatlakozás\n                    </button>\n                </div>\n                <button className=\"mx-4 mt-2 bg-yellow-600 hover:bg-yellow-700 text-white font-bold text-xl py-2 px-4 rounded\"\n                        onClick={() => window.location.href = \"http://www.ketaklub.hu/letoltes/Stratego%20Aoriginal%20Piatnik.pdf\"}>\n                    Szabályok\n                </button>\n            </div>\n        </div>\n    );\n};\n\nHome.propTypes = {\n    onPageChange: PropTypes.func.isRequired\n}\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { createRoom, leaveRoom } from \"../../state/messages/actions\";\nimport { getGameState } from \"../../state/gameState/selectors\";\nimport { Page } from \"../../enums/Page.tsx\";\nimport \"./loading.css\";\n\nexport const Lobby = ({ onPageChange }) => {\n    const dispatch = useDispatch();\n    const gameState = useSelector(getGameState);\n\n    const onMenuButtonClick = () => {\n        dispatch(leaveRoom(gameState.roomId));\n        onPageChange(Page.MAIN_PAGE);\n    }\n\n    useEffect(() => {\n        if (!gameState.roomId) {\n            dispatch(createRoom());\n        }\n        if (gameState.player && gameState.units.length === 0) {\n            onPageChange(Page.PREPARE_GAME);\n        }\n        if (gameState.currentPlayer) {\n            onPageChange(Page.IN_GAME);\n        }\n    });\n\n    return (\n        <div className=\"flex flex-col h-screen bg-gray-800\">\n            <div className=\"flex flex-col m-auto items-center\">\n                <div className=\"lds-ellipsis mt-64\"><div></div><div></div><div></div><div></div></div>\n                <div className=\"text-white\">\n                    Várakozás az ellenfélre ...\n                </div>\n                {(!gameState.player) &&\n                    <div className=\"text-white\">\n                        Szoba azonosító: {gameState.roomId}\n                    </div>\n                }\n            </div>\n            <div className=\"flex justify-center mb-32\">\n                <button className=\"mt-20 bg-transparent hover:bg-yellow-700 text-yellow-600 font-bold hover:text-white py-2 px-4 border border-yellow-600 hover:border-transparent rounded\"\n                        onClick={onMenuButtonClick}>\n                    Menü\n                </button>\n            </div>\n        </div>\n    );\n};\n\nLobby.propTypes = {\n    onPageChange: PropTypes.func.isRequired\n}\n","export const getPrepareState = state => state.prepareState;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Team } from \"../../enums/Team\";\nimport { Unit } from \"../../enums/Unit\";\n\nexport const Board = ({ gameState, onUnitClick, onBoardClick, onHandClick, onReady }) => {\n    return (\n        <div className=\"flex flex-col items-center\">\n            <div className=\"text-white mb-6\">\n                Előkészülés - {gameState.player === Team.RED ? \"Piros\" : \"Kék\"} csapat\n            </div>\n            <div\n                className=\"relative\"\n                style={{width: `${gameState.boardSize * 3}rem`, height: `${(gameState.boardSize + Math.ceil(gameState.units.length / gameState.boardSize)) * 3 + 4}rem`}}\n            >\n                {gameState.board.map(cell =>\n                    <div\n                        className=\"absolute z-0 w-12 h-12 select-none flex items-center justify-center\"\n                        style={{left: `${cell.position.x * 3}rem`, top: `${cell.position.y * 3}rem`}}\n                        onClick={() => onBoardClick(cell.id)}\n                        key={cell.id}\n                    >\n                        <div className={`bg-${cell.isAvailable ? \"green\" : \"gray\"}-500 w-10 h-10 rounded flex items-center justify-center transition duration-300 ease-in-out`}></div>\n                    </div>\n                )}\n                <div\n                    className=\"absolute text-white text-sm text-center\"\n                    style={{width: `${gameState.boardSize * 3}rem`, top: `${gameState.boardSize * 3 + 2}rem`}}\n                >\n                    Elérhető egységek\n                </div>\n                {gameState.hand.map(cell =>\n                    <div\n                        className=\"absolute z-0 w-12 h-12 select-none flex items-center justify-center\"\n                        style={{left: `${cell.position.x * 3}rem`, top: `${cell.position.y * 3 + gameState.boardSize * 3 + 4}rem`}}\n                        onClick={() => onHandClick(cell.id)}\n                        key={cell.id}\n                    >\n                        <div className=\"bg-transparent w-10 h-10 rounded flex items-center justify-center transition duration-300 ease-in-out border-solid border-2 border-gray-500\"></div>\n                    </div>\n                )}\n                {gameState.units.map(unit =>\n                    <div\n                        className=\"absolute z-10 w-12 h-12 select-none flex items-center justify-center transition-all duration-300 ease-in-out\"\n                        style={{left: `${unit.position.x * 3}rem`, top: `${unit.position.y * 3 + (unit.isInHand ? gameState.boardSize * 3 + 4 : 0)}rem`}}\n                        onClick={() => onUnitClick(unit.id)}\n                        key={unit.id}\n                    >\n                        <div className={`bg-${unit.team}-${unit.isSelected ? 300 : 500} w-10 h-10 rounded flex items-center justify-center`}>\n                            {unit.unit === Unit.BOMB ? \"💣\" : unit.unit === Unit.FLAG ? \"🚩\" : unit.unit}\n                        </div>\n                    </div>\n                )}\n                <div\n                    className=\"absolute flex items-center justify-center\"\n                    style={{left: `${gameState.boardSize * 3 + 2}rem`, top: `${(gameState.boardSize + Math.ceil(gameState.units.length / gameState.boardSize) / 2) * 3 + 2.5}rem`}}\n                >\n                    <button\n                        className={`bg-yellow-600 text-white font-bold text-xl py-2 px-4 rounded ${gameState.units.some(u => u.isInHand) ? \"opacity-50 cursor-not-allowed\" : \"hover:bg-yellow-700\"}`}\n                        style={gameState.units.some(u => u.isInHand) ? {outline: \"none\"} : {}}\n                        onClick={onReady}\n                    >\n                        Tovább\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nBoard.propTypes = {\n    gameState: PropTypes.object.isRequired,\n    onUnitClick: PropTypes.func.isRequired,\n    onBoardClick: PropTypes.func.isRequired,\n    onHandClick: PropTypes.func.isRequired,\n    onReady: PropTypes.func.isRequired\n}\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { syncState } from \"../../state/messages/actions\";\nimport { getGameState } from \"../../state/gameState/selectors\";\nimport {\n    prepareStateActivateUnit,\n    prepareStateMoveSelectedUnitOnBoard,\n    prepareStateMoveSelectedUnitOnHand\n} from \"../../state/prepareState/actions\";\nimport { gameStateAddUnits } from \"../../state/gameState/actions\";\nimport { getPrepareState } from \"../../state/prepareState/selectors\";\nimport { Page } from \"../../enums/Page\";\nimport { Board } from \"./Board\";\n\n\nexport const Prepare = ({ onPageChange }) => {\n    const gameState = useSelector(getGameState);\n    const prepareState = useSelector(getPrepareState);\n    const dispatch = useDispatch();\n\n    const handleUnitClick = (unitId) => dispatch(prepareStateActivateUnit(unitId));\n    const handleBoardClick = (boardCellId) => dispatch(prepareStateMoveSelectedUnitOnBoard(boardCellId));\n    const handleHandClick = (handCellId) => dispatch(prepareStateMoveSelectedUnitOnHand(handCellId));\n\n    const handleReady = () => {\n        if (prepareState.units.some(u => u.isInHand)) {\n            return;\n        }\n        dispatch(gameStateAddUnits(prepareState.units));\n    }\n\n    useEffect(() => {\n        if (gameState.player && gameState.units.filter(u => u.team === gameState.player).length > 0) {\n            dispatch(syncState(gameState));\n            onPageChange(Page.WAITING_FOR_SECOND_PLAYER);\n        }\n    });\n\n    return (\n        <div className=\"flex h-screen bg-gray-800\">\n            <div className=\"flex flex-col m-auto items-center\">\n                <Board\n                    gameState={prepareState}\n                    onUnitClick={handleUnitClick}\n                    onBoardClick={handleBoardClick}\n                    onHandClick={handleHandClick}\n                    onReady={handleReady}\n                />\n            </div>\n        </div>\n    );\n};\n\nPrepare.propTypes = {\n    onPageChange: PropTypes.func.isRequired\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Team } from \"../../enums/Team\";\nimport { Unit } from \"../../enums/Unit\";\n\nexport const Board = ({ gameState, onUnitClick, onBoardClick, onMenuButtonClick }) => {\n    return (\n        <>\n            <div className=\"text-white mb-6\">\n                {!gameState.winner && `${gameState.currentPlayer === Team.RED ? \"Piros\" : \"Kék\"} játékos következik`}\n                {gameState.winner === Team.RED && \"Piros játékos győzött!\"}\n                {gameState.winner === Team.BLUE && \"Kék játékos győzött!\"}\n                {gameState.winner === Team.NONE && \"Döntetlen!\"}\n            </div>\n            <div\n                className=\"relative\"\n                style={{width: `${gameState.boardSize * 3}rem`, height: `${gameState.boardSize * 3}rem`}}\n            >\n                {gameState.board.map(cell =>\n                    <div\n                        className=\"absolute z-0 w-12 h-12 select-none flex items-center justify-center\"\n                        style={{left: `${cell.position.x * 3}rem`, top: `${cell.position.y * 3}rem`}}\n                        onClick={() => onBoardClick(cell.id)}\n                        key={cell.id}\n                    >\n                        <div className={`bg-${cell.isAvailable && !gameState.isFightInProgress ? \"green\" : \"gray\"}-500 w-10 h-10 rounded flex items-center justify-center`}></div>\n                    </div>\n                )}\n                {gameState.graveyardBlue.map(cell =>\n                    <div\n                        className=\"absolute z-0 w-12 h-12 select-none flex items-center justify-center\"\n                        style={{left: `${-(Math.ceil(gameState.graveyardBlue.length / gameState.boardSize) - cell.position.x) * 3 - 2}rem`, top: `${cell.position.y * 3}rem`}}\n                        key={cell.id}\n                    >\n                        <div className=\"bg-blue-800 bg-opacity-25 w-10 h-10 rounded flex items-center justify-center transition duration-300 ease-in-out border-solid border-2 border-gray-500\"></div>\n                    </div>\n                )}\n                {gameState.graveyardRed.map(cell =>\n                    <div\n                        className=\"absolute z-0 w-12 h-12 select-none flex items-center justify-center\"\n                        style={{left: `${(gameState.boardSize + cell.position.x) * 3 + 2}rem`, top: `${cell.position.y * 3}rem`}}\n                        key={cell.id}\n                    >\n                        <div className=\"bg-red-800 bg-opacity-25 w-10 h-10 rounded flex items-center justify-center transition duration-300 ease-in-out border-solid border-2 border-gray-500\"></div>\n                    </div>\n                )}\n                {gameState.units.map(unit =>\n                    <div\n                        className={`absolute z-10 w-12 h-12 select-none flex items-center justify-center ${unit.isAlive ? \"transition-all duration-300 ease-in-out\" : \"\"}`}\n                        style={{\n                            left: `${\n                                unit.team === Team.RED && !unit.isAlive ? (gameState.boardSize + unit.position.x) * 3 + 2 :\n                                unit.team === Team.BLUE && !unit.isAlive ? -(Math.ceil(gameState.graveyardBlue.length / gameState.boardSize) - unit.position.x) * 3 - 2 :\n                                unit.position.x * 3\n                            }rem`,\n                            top: `${unit.position.y * 3}rem`\n                        }}\n                        onClick={() => onUnitClick(unit.id)}\n                        key={unit.id}\n                    >\n                        <div className={`bg-${unit.team}-${unit.id === gameState.selectedUnitId ? 300 : 500} w-10 h-10 rounded flex items-center justify-center\n                                       ${!gameState.isFightInProgress && unit.isAttackable ? \"border-solid border-2 border-yellow-400 border-opacity-75\" : \"\"}\n                                       ${gameState.isFightInProgress && unit.id === gameState.attackedUnitId ? `border-solid border-2 border-${unit.team === Team.RED ? Team.BLUE : Team.RED}-400 border-opacity-75` : \"\"}`}\n                        >\n                            {\n                                !gameState.winner && unit.isAlive && unit.team !== gameState.player && gameState.attackedUnitId !== unit.id && gameState.selectedUnitId !== unit.id ? \"?\" :\n                                unit.unit === Unit.BOMB ? \"💣\" :\n                                unit.unit === Unit.FLAG ? \"🚩\" :\n                                unit.unit\n                            }\n                        </div>\n                    </div>\n                )}\n            </div>\n            {gameState.winner &&\n                <button\n                    className=\"bg-yellow-600 text-white font-bold text-xl py-2 px-4 rounded hover:bg-yellow-700 mt-6\"\n                    style={gameState.units.some(u => u.isInHand) ? {outline: \"none\"} : {}}\n                    onClick={onMenuButtonClick}\n                >\n                    Menü\n                </button>\n            }\n        </>\n    );\n}\n\nBoard.propTypes = {\n    gameState: PropTypes.object.isRequired,\n    onUnitClick: PropTypes.func.isRequired,\n    onBoardClick: PropTypes.func.isRequired,\n    onMenuButtonClick: PropTypes.func.isRequired\n}\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n    gameStateMoveSelectedUnitOnBoard,\n    gameStateHandleUnitClick,\n    gameStateConcludeFight\n} from \"../../state/gameState/actions\";\nimport { getGameState } from \"../../state/gameState/selectors\";\nimport { Page } from \"../../enums/Page\";\nimport { Board } from \"./Board\";\nimport { syncState, leaveRoom } from \"../../state/messages/actions\";\n\nexport const Game = ({ onPageChange }) => {\n    const dispatch = useDispatch();\n    const gameState = useSelector(getGameState);\n\n    useEffect(() => {\n        if (!gameState.synced) {\n            dispatch(syncState(gameState));\n        }\n        if (gameState.isFightInProgress) {\n            setTimeout(() => {\n                dispatch(gameStateConcludeFight());\n            }, 3000);\n        }\n        if (gameState.winner) {\n            dispatch(leaveRoom(gameState.roomId));\n        }\n    });\n\n    return (\n        <div className=\"flex h-screen bg-gray-800\">\n            <div className=\"flex flex-col m-auto items-center\">\n                <Board\n                    gameState={gameState}\n                    onUnitClick={(unitId) => dispatch(gameStateHandleUnitClick(unitId))}\n                    onBoardClick={(cellId) => dispatch(gameStateMoveSelectedUnitOnBoard(cellId))}\n                    onMenuButtonClick={() => onPageChange(Page.MAIN_PAGE)}\n                />\n            </div>\n        </div>\n    );\n};\n\nGame.propTypes = {\n    onPageChange: PropTypes.func.isRequired\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n\nimport \"../tailwind.generated.css\";\n\nimport { Page } from \"../enums/Page.tsx\"\nimport { Home } from \"./home/Home\";\nimport { Lobby } from \"./lobby/Lobby\";\nimport { Prepare } from \"./prepare/Prepare\";\nimport { Game } from \"./game/Game\";\nimport { startListening } from \"../state/messages/actions\";\n\n\nexport const App = () => {\n    const dispatch = useDispatch();\n    const [page, setPage] = useState(Page.MAIN_PAGE);\n\n    useEffect(() => {\n        dispatch(startListening());\n    }, [dispatch]);\n\n    switch (page) {\n        case Page.MAIN_PAGE:\n            return <Home onPageChange={setPage}/>;\n        case Page.WAITING_FOR_SECOND_PLAYER:\n            return <Lobby onPageChange={setPage}/>;\n        case Page.PREPARE_GAME:\n            return <Prepare onPageChange={setPage}/>;\n        case Page.IN_GAME:\n            return <Game onPageChange={setPage}/>;\n        default:\n            return <Home onPageChange={setPage}/>;\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { configureStore } from \"./state/store.js\";\nimport { App } from \"./views/App\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}